[DEFAULT]
output_directory = ../data/nuswide/output/output24
input_directory= ../data/nuswide/input

#label is the path of concept file, which contains the ground truth concept matrix, one row per image/text
label = ${DEFAULT:input_directory}/validationGnd.npy

#query is the path of qury index, which is random sample between 0 and dbsize-1
query = ${DEFAULT:input_directory}/query100.npy

query_size=100
train_size=60000
show_freq=0
eval_freq=1
#we have already normalized images with ZCA during dataset preparation
normalize=False

#default hyper-parameters, which may vary for specific models
max_epoch=30
base_learning_rate = 0.005
learning_rate_decay_half_epochs = 10
start_momentum = 0.5
end_momentum = 0.9
momentum_decay_epochs = 5
weight_cost = 0.0001
batchsize = 100
verbose=False

#for denoising stacked auto-encoders
corruption_level=0
#gradient check
debug=False
#extract latent features
extract_reps=True
#save model parameters, i.e., W,b, when training finished
checkpoint=True

[tae1k-128]
#bottom auto-encoder for text sae
#use possion decoder
model=pae
hidden_dimension=128
visible_dimension = 1000

train_data = ${DEFAULT:input_directory}/trainTxt.npy
validation_data = ${DEFAULT:input_directory}/validationTxt.npy
train_reps = ${DEFAULT:output_directory}/trainTxt-x
validation_reps=${DEFAULT:output_directory}/validationTxt-x


[tae128-24]
#second auto-encoder of text sae
#use normal auto-encoder
model=ae
hidden_dimension=24
visible_dimension = 128

train_data=${tae1k-128:train_reps}
validation_data = ${tae1k-128:validation_reps}.npy
train_reps= ${tae1k-128:train_reps}x
validation_reps= ${tae1k-128:validation_reps}x

#model specific learning rate, overwrite default learning rate
base_learning_rate=0.01
extract_reps=False

#text sae
[tsae24]
model=sae
depth=3
ae1=${DEFAULT:output_directory}/tae1k-128/model
ae2=${DEFAULT:output_directory}/tae128-24/model

train_data = ${DEFAULT:input_directory}/trainTxt.npy
validation_data= ${DEFAULT:input_directory}/validationTxt.npy

reset_hyperparam=tsae24
extract_reps=False


[iae500-128]
#bottom auto-encoder of image sae
#use linear decoder
model=lae
hidden_dimension = 128
visible_dimension = 500

train_data = ${DEFAULT:input_directory}/trainImg.npy
validation_data = ${DEFAULT:input_directory}/validationImg.npy
train_reps= ${DEFAULT:output_directory}/trainImg-x
validation_reps= ${DEFAULT:output_directory}/validationImg-x


[iae128-24]
#second auto-encoder of image sae
#use normal auto-encoder
model=ae
hidden_dimension = 24
visible_dimension = 128

train_data = ${iae500-128:train_reps}
validation_data = ${iae500-128:validation_reps}.npy
train_reps= ${iae500-128:train_reps}x
validation_reps= ${iae500-128:validation_reps}x

#corruption_level=0.1
base_learning_rate=0.001
extract_reps=False

#image sae
[isae24]
model=sae
depth=3
ae1=${DEFAULT:output_directory}/iae500-128/model
ae2=${DEFAULT:output_directory}/iae128-24/model

train_data = ${DEFAULT:input_directory}/trainImg.npy
validation_data = ${DEFAULT:input_directory}/validationImg.npy

reset_hyperparam=isae24
base_learning_rate=0.001
extract_reps=False

[msae]
model=msae
depth=3
iae1=${DEFAULT:output_directory}/isae24/iae500-128
tae1=${DEFAULT:output_directory}/tsae24/tae1k-128
iae2=${DEFAULT:output_directory}/isae24/iae128-24
tae2=${DEFAULT:output_directory}/tsae24/tae128-24

extract_reps=False
reset_hyperparam=msae
base_learning_rate=0.05
max_epoch=60
#states control which sae to adjust and which to fix_img_path
#format:['desc info', fix_img_path, fix_txt_path, alpha, beta, 1, update_freq]
states=fix_txt_path, False,True,0,0,1,30,
        fix_img_path, True, False, 0, 0.02,1,30
